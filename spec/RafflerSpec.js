// Generated by CoffeeScript 1.6.3
(function() {

  describe("Raffler", function() {
    var Raffler, name, winner;
    beforeEach(function() {
      raffler = new Raffler();
      return this.collection.fetch();
    });
    describe("Adding a person to Raffler", function() {
      it("should keep track of new person", function() {
        Raffler.add(items);
        return expect(raffler.add).toEqual(entry);
      });
      
    });
    describe("delitng  from Raffler", function() {
      it("should remove item completely", function() {
        Raffler.remove(model);
        expect(raffler.destry(model)).toEqual(1);
        return expect(raffler.collection(model)).toBeFalsy();
      });
      
    });
    describe("the winner", function() {
      it("randomly choose a winner", function() {
        basket.add(winner);
        return expect(raffler.name()).toEqual(winner);
      });
      return it("correctly updates the winner", function() {
        raffler.add(laptop, 2);
        raffler.add(mouse, 2);
        raffler.remove(laptop, 1);
        return expect(raffler.totalPrice()).toEqual(420);
      });
    });
     
    describe("fetching item from Raffler", function() {
      it("returns the item object if it exists", function() {
        var result;
        raffle.add(name);
        result = basket.getItemFromBasket(name);
        expect(result.item).toEqual(raffler);
        return expect(result.quantity).toEqual(1);
      });
        
    });
     
     
     
  });

}).call(this);